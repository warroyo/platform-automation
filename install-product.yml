---

# Jobs:
# 1. upload-and-stage-product
# 2. upload-stemcell
# 3. generate-product-config
# 4. configure-product
# 5. apply-product-changes
# 6. export-installation

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: platform-automation-image
  type: s3
  source:
    endpoint: ((s3.endpoint))
    region_name: ((s3.region_name))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    bucket: ((s3.buckets.platform_automation))
    regexp: .*image-(.*).tgz

- name: platform-automation-tasks
  type: s3
  source:
    endpoint: ((s3.endpoint))
    region_name: ((s3.region_name))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    bucket: ((s3.buckets.platform_automation))
    regexp: .*tasks-(.*).zip

- name: installation
  type: s3
  source:
    endpoint: ((s3.endpoint))
    region_name: ((s3.region_name))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    bucket: ((s3.buckets.foundation))
    regexp: installation-after-(.*).zip

- name: product
  type: pivnet
  source:
    api_token: ((pivnet.token))
    product_slug: ((product.product_slug))
    product_version: ((product.product_version))
    sort_by: semver

- name: product-stemcell
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((stemcell.product_slug))
    product_version: ((stemcell.product_version))
    sort_by: semver

- name: configuration
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.configuration.uri))
    branch: master

# reusable stuff
credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  input_mapping:
    files: configuration
  params:
    CREDHUB_SERVER: ((credhub.server))
    CREDHUB_CA_CERT: ((credhub.ca_cert))
    CREDHUB_CLIENT: ((credhub.client))
    CREDHUB_SECRET: ((credhub.secret))
    PREFIX: /concourse/((foundation))
    INTERPOLATION_PATH: ((credhub.interpolate_folders))

jobs:
# 1. upload-and-stage-product
- name: upload-and-stage-product
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: product
      params:
        globs:
        - "((product.product_globs))"
    - get: configuration
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: upload-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: product
      env: interpolated-files
    params:
      ENV_FILE: ((foundation))/vars/env/env.yml
  - task: stage-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: product
      env: interpolated-files
    params:
      ENV_FILE: ((foundation))/vars/env/env.yml
  - task: staged-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-files
    params:
      PRODUCT_NAME: ((product.product_name))
      ENV_FILE: ((foundation))/vars/env/env.yml
      SUBSTITUTE_CREDENTIALS_WITH_PLACEHOLDERS: true
    on_success: &make-config-commit
      do:
        - task: make-commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: configuration
            file-source: generated-config
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: ((product.product_name)).yml
            FILE_DESTINATION_PATH: ((foundation))/generated-config/((product.product_name))-((product.product_version)).yml
            GIT_AUTHOR_EMAIL: ((git.user.email))
            GIT_AUTHOR_NAME: ((git.user.username))
            COMMIT_MESSAGE: "Add product config: ((product.product_name))-((product.product_version)).yml"
        - put: configuration
          params:
            repository: configuration-commit
            merge: true

# 2. upload-stemcell
- name: upload-stemcell
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [upload-and-stage-product]
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
    - get: product-stemcell
      params:
        globs:
        - "((stemcell.product_globs))"
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: upload-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-files
      stemcell: product-stemcell
    params:
      ENV_FILE: ((foundation))/vars/env/env.yml

# 3. generate-product-config
- name: generate-product-config
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [upload-and-stage-product]
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: staged-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-files
    params:
      PRODUCT_NAME: ((product.product_name))
      ENV_FILE: ((foundation))/vars/env/env.yml
      SUBSTITUTE_CREDENTIALS_WITH_PLACEHOLDERS: true
    on_success: &make-config-commit
      do:
        - task: make-commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: configuration
            file-source: generated-config
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: ((product.product_name)).yml
            FILE_DESTINATION_PATH: ((foundation))/generated-config/((product.product_name))-((product.product_version)).yml
            GIT_AUTHOR_EMAIL: ((git.user.email))
            GIT_AUTHOR_NAME: ((git.user.username))
            COMMIT_MESSAGE: "Add or update product config: ((product.product_name))-((product.product_version)).yml"
        - put: configuration
          params:
            repository: configuration-commit
            merge: true

# 4. configure-product
- name: configure-product
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [generate-product-config]
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: configure-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: interpolated-files
    params:
      CONFIG_FILE: ((foundation))/products/((product.product_name)).yml
      VARS_FILES: vars/((foundation))/vars/((product.product_name))-vars.yml
      ENV_FILE: ((foundation))/vars/env/env.yml

# 5. apply-product-changes
- name: apply-product-changes
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [upload-stemcell, configure-product]
      #trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: apply-product-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: ((foundation))/vars/env/env.yml
  - task: staged-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/staged-config.yml
    input_mapping:
      env: interpolated-files
    params:
      PRODUCT_NAME: ((product.product_name))
      ENV_FILE: ((foundation))/vars/env/env.yml
      SUBSTITUTE_CREDENTIALS_WITH_PLACEHOLDERS: true
    on_success: *make-config-commit

# 6. export-installation
- name: export-installation
  serial: true
  plan:
  - aggregate:
    - get: platform-automation-image
      params: {unpack: true}
      passed: [apply-product-changes]
      trigger: true
    - get: platform-automation-tasks
      params: {unpack: true}
    - get: configuration
  - task: credhub-interpolate
    <<: *credhub-interpolate
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: ((foundation))/vars/env/env.yml
      INSTALLATION_FILE: installation-after-((product.product_slug))-((product.product_version)).zip
  - put: installation
    params:
      file: installation/installation-after-((product.product_slug))-((product.product_version)).zip